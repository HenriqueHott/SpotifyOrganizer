Coisas feitas

Coisas que precisamos Fazer

  * 0 - aprender qual a variação de dp aceitável ao adicionar música ~> analisar como o desvio padrão variou
    ***armazenar metadados e dps

    * .0 - rodar testes adicionando músicas de mesmo gênero a playlist
    * .1 - rodar testes adicionando músicas de gênero diferente a playlist


Coisas que precisamos pensar

* 0 - Armazenamento dos metadados

  * .0 - Armazenamento local (?)

    * Problemas
      * Muito espaço local gasto (?) ~> testar p/ saber quanto efetivamente gasta

  * .1 - Para economizar processamento e acesso a API
    -> Rodar a primeira vez criando o representante de cada playlists
       -> representante possui
          -> array com cada valor de cada atributo + dp de cada atributo
          -> define qual o gênero da playlist
          -> possui pesos diferentes em atributos mais importantes

    * Como adicionar o máximo de músicas em uma playlist em uma request
      * criar buffer

  * .2 - Qual estratégia p/ atualizar files locais

* 1 - Pesquisa de qual playlist é a mais adequada

  * .0 - Como vai adicionar músicas novas

    * comparar dps dos atributos principais (3 atributos (?))
      * como calcular atributos principais
        * análise de quais atributos repete o valor nas músicas da mesma playlist

* 2 - Atualização dos valores
  * Usando representante
    * Atualizar dp a cada música adicionada (?)

* 3 - Qual variação de dp é aceitável quando música é adicionada

* 4 - Quando dp é muito grande (músicas de vários gêneros) o que fazer

  * .0 - multiplicar dp com valor X não usar dp
